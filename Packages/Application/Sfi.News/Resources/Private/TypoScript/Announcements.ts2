prototype(Sfi.News:Announcement) < prototype(Sfi.News:News) {
	templatePath = 'resource://Sfi.News/Private/Templates/Announcement.html'
	@override.configuration = ${Configuration.setting('Sfi.News.announcementDetail')}
	configuration = ${configuration}

	place = ${q(node).property('place')}
	dateStart = ${q(node).property('dateStart')}

	moreItems = Sfi.News:AnnouncementsList {
		@override.configuration = ${Configuration.setting('Sfi.News.newsRelated')}
		configuration = ${configuration}

		collection.@process.filterOutSelf {
			expression = ${q(value).filter('[_name != ' + q(node).property('_name') + ']').get()}
			@position = 'start'
		}
		content.archiveLink >
	}
}

prototype(Sfi.News:AnnouncementShort) < prototype(Sfi.News:NewsShort) {
	templatePath = 'resource://Sfi.News/Private/Templates/AnnouncementShort.html'
	@override.configuration = ${Configuration.setting('Sfi.News.announcementShort')}
	configuration = ${configuration}

	place = ${String.stripTags(q(node).property('place'))}
	dateStart = ${q(node).property('dateStart')}
}

prototype(Sfi.News:AnnouncementsList) < prototype(Sfi.News:AbstractList) {
	@override.configuration = ${Configuration.setting('Sfi.News.announcementsList')}
	configuration = ${configuration}

	# Get announcements collection here and push it to context vars, to be used both in Listable and in @cache
	@override.collection = ${q(site).children('announcements').find('[instanceof Sfi.News:Announcement]').get()}
	@override.collection.@process.filterByDate = ${q(value).count() > 0 ? q(value).filterByDate('date', Date.Now()).get() : value}
	@override.collection.@process.sortAgain = ${q(value).count() > 0 && this.sortProperty ? q(value).sort(this.sortProperty, 'ASC').get() : value}
	collection = ${collection}
	prototype(Sfi.News:Listable) {
		collection = ${collection}
		itemRenderer = Sfi.News:AnnouncementShort
	}
	@cache {
		mode = 'cached'
		# First element in collection is the one, that expires soonest (see sortAgain)
		maximumLifetime = ${q(collection).first().property('date').timestamp - Date.now().timestamp}
		entryIdentifier {
			node = ${node}
			editPreviewMode = ${editPreviewMode}
		}
		entryTags {
			1 = ${'NodeType_Sfi.News:Announcement'}
		}
	}
	@if.notEmpty = ${q(collection).count() > 0}
}
