prototype(Neos.NodeTypes:Image) {
	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/Image.html'
	imageClassName = "Figure"
	maximumWidth = 980
	alternativeText = ${node.properties.alternativeText ? node.properties.alternativeText : String.stripTags(node.properties.caption)}
	hasCaption = ${node.context.workspace.name == 'live' ? (((this.caption == "<p>Enter caption here</p>") || (this.caption == "")) ? null : true) : true}
}

prototype(Neos.NodeTypes:Text) {
	attributes.class = ${'RteText RteText--' + q(node).property('paragraphVariant')}
	text.@process.replaceTags = Sfi.Shared:ReplaceTags
}

prototype(Neos.NodeTypes:Headline) {
	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/Headline.html'
	attributes.id = ${q(node).property('_name')}
	attributes.class = 'RteText HeadingAnchor js-anchor'
}

# TODO: implement it the write way
prototype(Neos.NodeTypes:AssetList) {
	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/AssetList.html'
}

prototype(TYPO3.Neos:Content) {
	prototype(TYPO3.Neos:ContentCollection) {
		# As we render CC inside content often, we should cache them as separae entries
		@cache {
			mode = 'cached'
		}
	}
}

prototype(TYPO3.Neos:ContentCollection).@if.notEmptyOrInBackend = ${this.content != '' || documentNode.context.inBackend}
