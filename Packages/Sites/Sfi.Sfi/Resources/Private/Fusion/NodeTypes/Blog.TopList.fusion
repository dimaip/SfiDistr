

prototype(Sfi.Sfi:Blog.TopList) < prototype(Neos.Fusion:Component) {
    @context.collection = ${q(site).find('[instanceof Sfi.Sfi:Blog]').sort('date', 'DESC').slice(0, 20).get()}
    @if.notEmpty = ${q(collection).count() > 0}
    @process.tmpl = ${'<div class="row"><div class="columns">' + value + '</div></div>'}
    listTitle = ${q(nodes)}
    listTitle = ${q(site).find('[instanceof Sfi.Sfi:Blog.Store]').first().property('title')}
    list = Neos.Fusion:Collection {
        @process.ul = afx`<ul class="large-block-grid-4 medium-block-grid-2 small-block-grid-1">{value}</ul>`
        collection = ${collection}
        itemName = 'node'
        itemRenderer = Flowpack.Listable:ContentCaseShort {
            @context.lastAuthor = ${Registry.getset('lastAuthor', node.properties.author)}
            @if.notDuplicate = ${lastAuthor.identifier != node.properties.author.identifier && iterator.index < 4}
            @process.li = afx`<li>{value}</li>`
        }
        @cache {
            mode = 'cached'
            entryIdentifier {
                node = ${node}
            }
            entryTags {
                1 = ${Neos.Caching.nodeTypeTag('Sfi.Sfi:Blog')}
            }
        }
    }
    archiveLinkTitle = ${Translation.translate('allBlogs', null, [], null, 'Sfi.Sfi')}
    archiveLinkUri = Neos.Neos:NodeUri {
        node = ${q(site).find('[instanceof Sfi.Sfi:Blog.Store]').get(0)}
    }

    renderer = afx`
        <h2 class="H4 color-grayAlt paddingVertical-single marginBottom-sesquialteral border-bottom">
            {props.listTitle} <span style="text-transform: lowercase; font-weight: normal;" class="ParagraphAlt color-primary">| <a href={props.archiveLinkUri}>{props.archiveLinkTitle}</a></span>
        </h2>
        {props.list}
    `
}
