prototype(Sfi.Sfi:FundraisingProjectsListing) < prototype(Neos.Fusion:Collection) {
    @context.subscriber = ${Registry.get('subscriber')}
    @context.amounts = ${Sfi.fetch('https://payments.sfi.ru/getAmountDonate')}
    @process.wrap = ${'<ul style="display:flex" class="FundraisingProjectsListing">' + value + '</ul>'}
    collection = ${q(site).find('[instanceof Sfi.Sfi:FundraisingProject]').get()}
    collection.@process.filterOutCurrent = ${subscriber.referer ? q(value).filter('[uriPathSegment != ' + subscriber.referer + ']') : value}
    itemName = 'node'
    itemRenderer = Neos.Fusion:Array {
        @process.wrap = ${'<li style="' + (node.properties.complete ? 'opacity: 0.5' : '') + '" class="FundraisingProjectSmall marginBottom-double"><div class="FundraisingProjectSmall-inner marginHorizontal-single"><a href="' + this.nodeUri + '"><div>' + value + '</div></a></div></li>'}
        @ignoreProperties = ${['thumbUri', 'nodeUri']}
        nodeUri = NodeUri {
            node = ${node}
        }
        thumbUri = ImageUri {
            asset = ${node.properties.thumb}
            width = 640
            height = 457
            allowCropping = true
        }
        image = ${'<img src="' + this.thumbUri + '">'}
        body = Neos.Fusion:Array {
            @process.wrap = ${'<div class="FundraisingProjectSmall-body">' + value + '</div>'}
            title = ${'<h3 class="FundraisingProjectSmall-title H2 color-brown">' + node.properties.title + '</h3>'}
            bar = Sfi.Sfi:FundraisingBar {
                projectId = ${node.properties.uriPathSegment}
                target = ${node.properties.target}
                offset = ${node.properties.offset}
                @process.wrap = ${'<div class="FundraisingProjectSmall-bottom">' + value + '<div class="FundraisingProjectSmall-arrow color-brown textAlign-center">â†’</div></div>'}
            }
        }
    }

    @cache {
        mode = 'dynamic'
        entryIdentifier {
            node = ${documentNode}
            referer = ${subscriber.referer}
        }
        entryDiscriminator = ${subscriber.referer}
        entryTags {
            1 = ${Neos.Caching.nodeTypeTag('Sfi.Sfi:FundraisingProject')}
        }
        context {
            1 = 'site'
            2 = 'documentNode'
        }
        maximumLifetime = '600'
    }
}
