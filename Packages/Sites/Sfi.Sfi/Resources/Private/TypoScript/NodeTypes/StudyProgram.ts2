prototype(Sfi.Sfi:StudyProgramAsset) <  prototype(Sfi.Shared:Asset) {
	attributes.class = 'ButtonInline AssetInline'
	attributes.href = ${'asset://' + node.properties.asset.identifier}
	attributes.href.@process.convertUris = TYPO3.Neos:ConvertUris
	@if.assetNotEmptyOrInBackend = ${node.properties.asset.identifier != null || documentNode.context.inBackend}
}

prototype(Sfi.Sfi:StudyProgram) {
	partialRootPath = 'resource://Sfi.Sfi/Private/Partials'

	level = ${String.stripTags(q(node).parent().parent().property('title'))}
	division = ${String.stripTags(q(node).parent().property('title'))}

	#TODO: translate
	assetDescription = Sfi.Sfi:StudyProgramAsset {
		title = 'Описание образовательной программы'
		@override.node = ${q(node).children('assetDescription').get(0)}
	}
	assetSchedule = Sfi.Sfi:StudyProgramAsset {
		title = 'Календарный учебный график'
		@override.node = ${q(node).children('assetSchedule').get(0)}
	}
	assetAccreditation = Sfi.Sfi:StudyProgramAsset {
		title = 'Свидетельство о государственной аккредитации'
		@override.node = ${q(node).children('assetAccreditation').get(0)}
	}
	assetInvoice = Sfi.Sfi:StudyProgramAsset {
		title = 'Квитанция для оплаты обучения'
		@override.node = ${q(node).children('assetInvoice').get(0)}
	}
	assetAdmissionRegulations = Sfi.Sfi:StudyProgramAsset {
		title = 'Правила приема'
		@override.node = ${q(node).children('assetAdmissionRegulations').get(0)}
	}
	assetSampleContract = Sfi.Sfi:StudyProgramAsset {
		title = 'Образец договора об оказании платных образовательных услуг'
		@override.node = ${q(node).children('assetSampleContract').get(0)}
	}

	assetsPlan = TYPO3.Neos:ContentCollection {
		nodePath = 'assetsPlan'
	}
	assetsSubjectAnnotations = TYPO3.Neos:ContentCollection {
		nodePath = 'assetsSubjectAnnotations'
	}
	assetsPracticeAnnotations = TYPO3.Neos:ContentCollection {
		nodePath = 'assetsPracticeAnnotations'
	}
	assetsMethodical = TYPO3.Neos:ContentCollection {
		nodePath = 'assetsMethodical'
	}
	description = TYPO3.Neos:ContentCollection {
		nodePath = 'description'
	}
	subjects = TYPO3.Neos:ContentCollection {
		nodePath = 'subjects'
	}
	schedule = TYPO3.Neos:ContentCollection {
		nodePath = 'schedule'
	}
	documentSubmission = TYPO3.Neos:ContentCollection {
		nodePath = 'documentSubmission'
	}
	exams = TYPO3.Neos:ContentCollection {
		nodePath = 'exams'
	}
	payment = TYPO3.Neos:ContentCollection {
		nodePath = 'payment'
	}
	admission = TYPO3.Neos:ContentCollection {
		nodePath = 'admission'
	}
	admissionContacts = TYPO3.Neos:ContentCollection {
		nodePath = 'admissionContacts'
	}
	numberOfSeats = TYPO3.Neos:ContentCollection {
		nodePath = 'numberOfSeats'
	}
	admissionRegulations = TYPO3.Neos:ContentCollection {
		nodePath = 'admissionRegulations'
	}
	feedback = TYPO3.Neos:ContentCollection {
		nodePath = 'feedback'
	}

	@process.contentElementWrapping = TYPO3.Neos:ContentElementWrapping
}

prototype(Sfi.Sfi:StudyProgramShort) < prototype(TYPO3.Neos:Content) {
	templatePath = 'resource://Sfi.Sfi/Private/Templates/TypoScriptObjects/StudyProgramShort.html'
	title = ${String.stripTags(q(node).property('title'))}
	duration = ${q(node).property('duration')}
	nextDate = ${q(node).property('nextDate')}
	educationForm = ${q(node).property('educationForm')}
	details = ${q(node).property('details')}
	price = ${q(node).property('price')}
}

prototype(Sfi.Sfi:StudyProgramShortFormal) < prototype(TYPO3.Neos:Content) {
	templatePath = 'resource://Sfi.Sfi/Private/Templates/TypoScriptObjects/StudyProgramShortFormal.html'
	title = ${String.stripTags(q(node).property('title'))}
	level = ${q(node).parent().parent().property('title')}
	division = ${q(node).parent().property('title')}
	duration = ${q(node).property('duration')}
	accreditationDate = ${q(node).property('accreditationDate')}

	#TODO: translate
	assetDescription = Sfi.Sfi:StudyProgramAsset {
		content = 'Описание образовательной программы'
		@override.resourceIdentifier = ${node.properties.assetDescription.identifier}
	}
	assetSchedule = Sfi.Sfi:StudyProgramAsset {
		content = 'Календарный учебный график'
		@override.resourceIdentifier = ${node.properties.assetSchedule.identifier}
	}
	assetsSubjectAnnotations = TYPO3.Neos:ContentCollection {
		nodePath = 'assetsSubjectAnnotations'
	}
	assetsPracticeAnnotations = TYPO3.Neos:ContentCollection {
		nodePath = 'assetsPracticeAnnotations'
	}
	assetInvoice = Sfi.Sfi:StudyProgramAsset {
		content = 'Квитанция для оплаты обучения'
		@override.resourceIdentifier = ${node.properties.assetInvoice.identifier}
	}
	assetAdmissionRegulations = Sfi.Sfi:StudyProgramAsset {
		content = 'Правила приема'
		@override.resourceIdentifier = ${node.properties.assetAdmissionRegulations.identifier}
	}
	assetSampleContract = Sfi.Sfi:StudyProgramAsset {
		content = 'Образец договора об оказании платных образовательных услуг'
		@override.resourceIdentifier = ${node.properties.assetSampleContract.identifier}
	}
	assetAccreditation = Sfi.Sfi:StudyProgramAsset {
		content = 'Свидетельство о государственной аккредитации'
		@override.resourceIdentifier = ${node.properties.assetAccreditation.identifier}
	}

	assetsPlan = TYPO3.Neos:ContentCollection {
		nodePath = 'assetsPlan'
	}
}

prototype(Sfi.Sfi:StudyProgramsListingAbstract) < prototype(Sfi.Shared:Sections) {
	panels.collection = 'to-be-set'

	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/Sections.html'
	@override.rootNode = ${q(node).property('rootNode')}
	layout = 'Sections--Accordion'
	tabs>
	panels.itemRenderer {
		accordion = ${q(node).property('specialityId') != '' ? q(node).property('title') + ' (' + q(node).property('specialityId') + ')' : q(node).property('title')}
		panel = Sfi.Sfi:StudyProgramShort
	}
}

prototype(Sfi.Sfi:StudyProgramsListing) < prototype(Sfi.Sfi:StudyProgramsListingAbstract) {
	@override.rootNode = ${q(node).property('rootNode')}
	panels.collection = ${q(rootNode).children().get()}
	# Guess why it needs to be overriden?
	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/Sections.html'

	@cache {
		mode = 'cached'
		entryIdentifier {
			node = ${node}
			editPreviewMode = ${editPreviewMode}
		}
		entryTags {
			1 = ${'Node_' + rootNode.identifier}
			2 = ${'DescendantOf_' + rootNode.identifier}
		}
	}
}

prototype(Sfi.Sfi:StudyProgramsListingFormal) < prototype(Sfi.Sfi:StudyProgramsListing) {
	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/Sections.html'
	panels.itemRenderer.panel = Sfi.Sfi:StudyProgramShortFormal
}

prototype(Sfi.Sfi:StudyProgramsListingByReference) < prototype(Sfi.Sfi:StudyProgramsListingAbstract) {
	panels.collection = ${q(node).property('references')}
	# Guess why it needs to be overriden?
	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/Sections.html'

	@cache {
		mode = 'cached'
		entryIdentifier {
			node = ${node}
			editPreviewMode = ${editPreviewMode}
		}
		entryTags {
			1 = ${'Node_' + node.identifier}
			2 = ${'NodeType_Sfi.Sfi:StudyProgram'}
		}
	}
}

prototype(TYPO3.Neos:PrimaryContent) {
	StudyProgram {
		@position = 'before default'
		condition = ${q(node).is('[instanceof Sfi.Sfi:StudyProgram]')}
		type = 'Sfi.Sfi:StudyProgram'
	}
}
