prototype(Sfi.Sfi:StudyProgram) {
	partialRootPath = 'resource://Sfi.Sfi/Private/Partials'

	level = ${String.stripTags(q(node).parent().parent().property('title'))}
	division = ${String.stripTags(q(node).parent().property('title'))}

	main = TYPO3.Neos:ContentCollection {
		nodePath = 'main'
	}

	@cache {
		mode = 'cached'
		maximumLifetime = '86400'
		entryIdentifier {
			node = ${node}
			editPreviewMode = ${editPreviewMode}
			format = ${request.format}
		}
		entryTags {
			# Whenever the node changes the matched condition could change
			1 = ${'Node_' + documentNode.identifier}
			# Whenever one of the parent nodes changes the layout could change
			2 = ${'DescendantOf_' + documentNode.identifier}
		}
	}
}

prototype(Sfi.Sfi:StudyProgramShort) < prototype(TYPO3.Neos:Content) {
	templatePath = 'resource://Sfi.Sfi/Private/Templates/TypoScriptObjects/StudyProgramShort.html'
	title = ${String.stripTags(q(node).property('title'))}
	duration = ${q(node).property('duration')}
	nextDate = ${q(node).property('nextDate')}
	educationForm = ${q(node).property('educationForm')}
	details = ${q(node).property('details')}
	price = ${q(node).property('price')}
}

prototype(Sfi.Sfi:StudyProgramsListing) < prototype(Sfi.Shared:Sections) {
	templatePath = 'resource://Sfi.Shared/Private/Templates/NodeTypes/Sections.html'
	@override.rootNode = ${q(node).property('rootNode')}
	layout = 'Sections--Accordion'
	tabs>
	panels.collection = ${q(rootNode).children().get()}
	panels.itemRenderer {
		accordion = ${q(node).property('title')}
		panel = Sfi.Sfi:StudyProgramShort
	}
}

# Add support for StudyProgramShort to renderer of Listable
prototype(Sfi.News:Listable).itemRenderer.StudyProgram {
	condition = ${q(node).is('[instanceof Sfi.Sfi:StudyProgram]')}
	type = 'Sfi.Sfi:StudyProgramShort'
}


prototype(TYPO3.Neos:PrimaryContent) {
	StudyProgram {
		@position = 'before default'
		condition = ${q(node).is('[instanceof Sfi.Sfi:StudyProgram]')}
		type = 'Sfi.Sfi:StudyProgram'
	}
}
